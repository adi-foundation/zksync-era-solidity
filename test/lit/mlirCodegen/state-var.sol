// RUN: solc --mlir-action=print-init --mmlir --mlir-print-debuginfo %s | FileCheck %s

// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.0;

contract C {
  uint m;
  function f() public returns (uint d) { return m; }
}

// NOTE: Assertions have been autogenerated by test/updFileCheckTest.py
// CHECK: module {
// CHECK-NEXT:   sol.contract @C_12 {
// CHECK-NEXT:     sol.state_var @m : i256 loc(#loc2)
// CHECK-NEXT:     sol.func @f_11() -> i256 attributes {state_mutability = #sol<StateMutability NonPayable>} {
// CHECK-NEXT:       %0 = sol.addr_of @m : !sol.ptr<i256, Storage> loc(#loc2)
// CHECK-NEXT:       %1 = sol.load %0 : !sol.ptr<i256, Storage>, i256 loc(#loc4)
// CHECK-NEXT:       sol.return %1 : i256 loc(#loc5)
// CHECK-NEXT:     } loc(#loc3)
// CHECK-NEXT:   } {interface_fns = [{selector = "26121ff0", sym = @f_11, type = () -> i256}], kind = #sol<ContractKind Contract>} loc(#loc1)
// CHECK-NEXT: } loc(#loc)
// CHECK-NEXT: #loc = loc(unknown)
// CHECK-NEXT: #loc1 = loc({{.*}}:5:0)
// CHECK-NEXT: #loc2 = loc({{.*}}:6:2)
// CHECK-NEXT: #loc3 = loc({{.*}}:7:2)
// CHECK-NEXT: #loc4 = loc({{.*}}:7:48)
// CHECK-NEXT: #loc5 = loc({{.*}}:7:41)
// CHECK-EMPTY:
